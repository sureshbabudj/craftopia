generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int       @id @default(autoincrement())
  email                   String    @unique
  name                    String
  password                String?
  isAdmin                 Boolean   @default(false)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  authProvider            String    @default("CREDENTIALS")
  verificationToken       String?   @unique
  emailVerified           Boolean   @default(false)
  verificationTokenExpiry DateTime?
  forgotPasswordToken     String?   @unique
  orders                  Order[]
  products                Product[]
}

model Image {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  userId      Int
  categoryId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderId     Int?
  images      Image[]
  Order       Order?   @relation(fields: [orderId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  tags        Tag[]    @relation("ProductToTag")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[] @relation("ProductToTag")
}

model Order {
  id        Int       @id @default(autoincrement())
  status    String    @default("PENDING")
  total     Float
  userId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  products  Product[]
}
